server {
    listen 80;
    listen [::]:80;  # 支持IPv6
    server_name localhost;

    # 字符集设置（防止中文乱码）
    charset utf-8;

    # 根目录（统一存放HTML和数据文件）
    root /usr/share/nginx/html;
    index index.html;

    # 访问日志配置（生产环境建议开启）
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # 静态资源缓存策略（优化性能）
    location ~* \.(html|css|js|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
        expires 1h;  # 1小时缓存
        add_header Cache-Control "public, max-age=3600, must-revalidate";
        add_header Pragma "public";
        try_files $uri $uri/ =404;
    }

    # 主应用路由（单页应用支持）
    location / {
        try_files $uri $uri/ /index.html;  # 前端路由 fallback
        autoindex off;  # 禁用目录列表
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;  # HSTS
    }

    # 数据文件处理（核心配置）
    location /data-files/ {
        # 安全基础
        autoindex off;  # 禁止目录浏览
        # 移除 internal; 允许客户端访问

        # 请求方法限制
        limit_except GET PUT {
            deny all;  # 仅允许读取和写入，拒绝删除/移动等操作
        }

        # DAV模块配置（支持PUT写入）
        dav_methods PUT;
        create_full_put_path on;  # 自动创建目录（如需多级目录）
        dav_access user:rw group:rw all:r;  # 权限控制

        # 安全限制
        client_max_body_size 100k;  # 限制单文件大小（计数器数据足够）
        client_body_timeout 10s;   # 限制请求体传输超时
        send_timeout 10s;          # 限制响应发送超时

        # 数据文件MIME类型
        default_type application/json;

        # 允许跨域（如果前端有跨域请求，根据实际情况调整Origin）
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods GET,PUT,OPTIONS;
        add_header Access-Control-Allow-Headers Content-Type;

        # 处理OPTIONS预检请求
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # 404页面处理
    error_page 404 /index.html;

    # 5xx错误处理
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # 生产环境安全响应头（修正CSP允许内联脚本）
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    # 允许内联脚本（'unsafe-inline'），否则前端脚本无法运行
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
}